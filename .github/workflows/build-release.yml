name: Release build

on:
  # manually run
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - target: aarch64-apple-darwin
            host: macos-latest
          - target: x86_64-apple-darwin
            host: macos-latest

          - target: x86_64-pc-windows-gnu
            host: ubuntu-latest
            gpp-package: g++-mingw-w64-x86-64-win32
            gcc: x86_64-w64-mingw32-gcc-win32
            gpp: x86_64-w64-mingw32-g++-win32
    runs-on: ${{matrix.host}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        shell: bash
        run: |
          export CFLAGS='-O2 -pipe -flto'
          export CMAKEFLAGS="${CMAKEFLAGS} -DSDL_DEPS_SHARED=off -DSDL_SHARED=off -DSDL_STATIC=on"

          if [ -n "${{matrix.gpp-package}}" ]; then
              sudo apt install ${{matrix.gpp-package}}
              export CC=${{matrix.gcc}}
              export CXX=${{matrix.gcc}}
          fi
          if [ -z "${CC}" ]; then
              if command -v clang; then
                  export CFLAGS="${CFLAGS} --target=${{matrix.target}}"
              fi
          fi

          CMAKEFLAGS="-DSDL_DEPS_SHARED=off -DSDL_SHARED=off -DSDL_STATIC=on"
          if [ -n "$(echo ${{matrix.target}} | grep windows)" ]; then
              CMAKEFLAGS="${CMAKEFLAGS} -DCMAKE_SYSTEM_NAME=Windows"
          fi

          mkdir build
          cd build
          cmake .. ${CMAKEFLAGS}

          make -j
          strip bin/3DASCII
